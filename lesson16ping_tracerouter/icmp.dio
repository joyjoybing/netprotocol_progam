<mxGraphModel dx="739" dy="395" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" background="#ffffff"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="2" value="icmp时间戳请求应答报文通过（&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;）来实现" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="10" y="10" width="480" height="20" as="geometry"/></mxCell><mxCell id="3" value="怎么构建时间戳请求报文？+6分" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="25" y="50" width="360" height="20" as="geometry"/></mxCell><mxCell id="6" value="作业4：动手写一个对时间戳请求给予响应的程序？+8分" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="42" y="433" width="440" height="20" as="geometry"/></mxCell><mxCell id="9" value="IP Header" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;align=center;" parent="1" vertex="1"><mxGeometry x="310" y="184" width="110" height="50" as="geometry"/></mxCell><mxCell id="10" value="ICMP报文" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;align=center;" parent="1" vertex="1"><mxGeometry x="420" y="184" width="120" height="50" as="geometry"/></mxCell><mxCell id="11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.5;exitY=0;entryX=0.5;entryY=0;jettySize=auto;orthogonalLoop=1;fontSize=18;" parent="1" source="10" target="10" edge="1"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="12" value="sendbuffer发送缓冲区的内容：" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=18;" parent="1" vertex="1"><mxGeometry x="44" y="189" width="250" height="45" as="geometry"/></mxCell><mxCell id="15" value="&lt;div&gt;如果需要手动填重IP包头，then&lt;/div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setsockopt(rawsock, IPPROTO_IP, IP_HDRINCL, &amp;amp;set, sizeof(set))&amp;lt;0&lt;/span&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=18;" parent="1" vertex="1"><mxGeometry x="29" y="95" width="661" height="60" as="geometry"/></mxCell><mxCell id="17" value="&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;letter-spacing: 0px&quot;&gt;step1:&amp;nbsp; 确定接收目标&amp;nbsp; 参数传入&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;letter-spacing: 0px&quot;&gt;step2：&lt;/span&gt;&lt;span&gt;skfd = socket(PF_INET, SOCK_RAW, IPPROTO_ICMP)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;step3：构建并发送n个ICMP数据包&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;step4：接收并拆ICMP数据包？（+6）&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;注：发送没有构建IP包头，由系统构建，但是接收时，接收缓冲区的首地址是IP包头。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=18;" parent="1" vertex="1"><mxGeometry x="44" y="260" width="546" height="140" as="geometry"/></mxCell><mxCell id="18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0.25;exitY=1;entryX=0.25;entryY=1;jettySize=auto;orthogonalLoop=1;fontSize=18;" parent="1" source="6" target="6" edge="1"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="19" value="怎么保证icmp响应是对进程发出请求的响应？（+3分）" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=18;" parent="1" vertex="1"><mxGeometry x="60" y="400" width="480" height="20" as="geometry"/></mxCell><mxCell id="20" value="参考&lt;span&gt;icmp时间戳请求应答，icmp&lt;/span&gt;回显请求应答程序的思路？（+6分）" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="44" y="480" width="556" height="20" as="geometry"/></mxCell><mxCell id="21" value="&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;letter-spacing: 0px&quot;&gt;step1 ：定义sendbuf&amp;nbsp; recvbuf&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;letter-spacing: 0px&quot;&gt;step2：强制转换sendbuf为icmp结构体指针&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;step3: 填充icmp echo请求&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;step4:定义sockaddr_in dst_addr 目的ip 及sockfd = socket(AF_INET, SOCK_RAW, IPPROTO_ICMP)&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;step5: sendto(sendbuf....)&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;step6: 解析icmp echo应答包，并判断是否是进程自己发出的icmp echo请求，接收并解析出需要的字段&lt;/div&gt;&lt;div style=&quot;text-align: left&quot;&gt;&lt;span style=&quot;letter-spacing: 0px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="80" y="510" width="530" height="190" as="geometry"/></mxCell><mxCell id="22" value="icmp_reply = (struct icmp*)((char*)iph + (iph-&amp;gt;ip_hl &amp;lt;&amp;lt; 2))&amp;nbsp; 作用是：？（+2分）" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="42" y="750" width="576" height="20" as="geometry"/></mxCell><mxCell id="23" value="icmp 伪ip flooding攻击思路：&lt;div&gt;step1:&amp;nbsp;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="48" y="789" width="440" height="50" as="geometry"/></mxCell><mxCell id="24" value="ping的实现思路？ or&amp;nbsp; &amp;nbsp;ping的伪代码实现" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="53" y="838" width="440" height="50" as="geometry"/></mxCell><mxCell id="25" value="&amp;nbsp; tcpdump、ping、traceroute的简单实现" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="44" y="690" width="440" height="50" as="geometry"/></mxCell><mxCell id="26" value="traceroute的实现思路？ or&amp;nbsp; &amp;nbsp;traceroute的伪代码实现" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=16;" parent="1" vertex="1"><mxGeometry x="54" y="881" width="440" height="50" as="geometry"/></mxCell></root></mxGraphModel>